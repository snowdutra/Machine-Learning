{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gustavo Dutra","text":"Data Scientist | Machine Learning S\u00e3o Paulo, Brasil"},{"location":"#machine-learning","title":"Machine Learning \ud83e\udde0","text":"<ul> <li> \ud83c\udf33 Classifica\u00e7\u00e3o de Performance de Estudantes \u00c1rvore de decis\u00e3o, an\u00e1lise explorat\u00f3ria, visualiza\u00e7\u00f5es e insights sobre dados educacionais. </li> <li> \ud83d\udcc8 Regress\u00e3o Linear e Polinomial Modelos de regress\u00e3o para previs\u00e3o e an\u00e1lise de tend\u00eancias. </li> <li> \ud83e\udde9 Clustering e Segmenta\u00e7\u00e3o Agrupamento de dados, K-means, an\u00e1lise de grupos e perfis. </li> <li> \ud83e\udd16 Redes Neurais e Deep Learning Introdu\u00e7\u00e3o a redes neurais, exemplos pr\u00e1ticos e aplica\u00e7\u00f5es. </li> <li> \ud83d\udee0\ufe0f Feature Engineering Cria\u00e7\u00e3o, sele\u00e7\u00e3o e transforma\u00e7\u00e3o de vari\u00e1veis para melhorar modelos. </li> <li> \ud83d\udcca  Visualiza\u00e7\u00e3o de Dados Gr\u00e1ficos, heatmaps, boxplots e outras t\u00e9cnicas para explorar dados. </li> </ul> <p>Explore mais projetos e exemplos no reposit\u00f3rio principal!</p>"},{"location":"#habilidades-tecnologias","title":"Habilidades &amp; Tecnologias","text":"<ul> <li> \ud83d\udc0d Python &amp; Data Science </li> <li> \ud83e\udde0 Machine Learning &amp; Estat\u00edstica </li> <li> \ud83e\udd16 Deep Learning &amp; Redes Neurais </li> <li> \ud83d\udcca Visualiza\u00e7\u00e3o de Dados </li> <li> \ud83d\udee0\ufe0f Ferramentas: Pandas, Scikit-learn, TensorFlow, PyTorch, SQL </li> </ul>"},{"location":"#fique-a-vontade-para-conectar","title":"Fique \u00e0 vontade para conectar!","text":""},{"location":"#mentores-e-referencias","title":"Mentores e Refer\u00eancias","text":"<ul> <li>GitHub Hsandmann</li> <li>MkDocs Material</li> <li>Mermaid Live Editor</li> </ul>"},{"location":"arvore_decisao/analise_exploratoria/","title":"3. Visualizar Dados B\u00e1sicos","text":"<p>Aqui verificamos o formato do dataset, os tipos de dados e se h\u00e1 valores nulos. Isso \u00e9 fundamental para garantir a qualidade dos dados antes de qualquer an\u00e1lise.</p> C\u00f3digoResultado <pre><code>print('Formato do dataset:', df.shape)\ndf.info()\nprint('\\nValores nulos por coluna:')\nprint(df.isnull().sum())\n</code></pre> <p>O dataset possui 1000 linhas e 8 colunas, sem valores nulos. Isso indica que n\u00e3o \u00e9 necess\u00e1rio tratamento de dados ausentes.</p>"},{"location":"arvore_decisao/arvore_visual/","title":"12. \u00c1rvore de Decis\u00e3o Visual (Classifica\u00e7\u00e3o Aprova\u00e7\u00e3o/Reprova\u00e7\u00e3o)","text":"<p>Antes de visualizar a \u00e1rvore, criamos uma vari\u00e1vel de classifica\u00e7\u00e3o para aprova\u00e7\u00e3o/reprova\u00e7\u00e3o: <pre><code>X_visu = df.drop(['math score', 'reading score', 'writing score'], axis=1)\ny_visu = (df['math score'] &gt;= 60).astype(int)  # 1 = aprovado, 0 = reprovado\n</code></pre></p> <p>Esta \u00e1rvore foi gerada para maximizar a clareza e a interpreta\u00e7\u00e3o dos crit\u00e9rios de decis\u00e3o, utilizando os melhores hiperpar\u00e2metros encontrados na otimiza\u00e7\u00e3o. Para facilitar a visualiza\u00e7\u00e3o dos n\u00f3s inferiores, a profundidade foi limitada e a \u00e1rvore foi exportada em formato PNG.</p> C\u00f3digoResultado <pre><code># \u00c1rvore de decis\u00e3o visual otimizada para tomada de decis\u00e3o\nfrom sklearn import tree\nimport matplotlib.pyplot as plt\nimport matplotlib\nmatplotlib.use('Agg')\nimport os\nfrom IPython.display import Image, display\nos.makedirs('docs/arvore_decisao/imagens', exist_ok=True)\n\nclf_otimizada = DecisionTreeClassifier(\n    max_depth=3,\n    min_samples_split=best_tree.get_params().get('min_samples_split', 2),\n    min_samples_leaf=best_tree.get_params().get('min_samples_leaf', 1),\n    max_features=best_tree.get_params().get('max_features', None),\n    random_state=42\n)\nclf_otimizada.fit(X_visu, y_visu)\n\nfig = plt.figure(figsize=(18, 12), dpi=120)\ntree.plot_tree(\n    clf_otimizada,\n    feature_names=X_visu.columns,\n    class_names=['Reprovado', 'Aprovado'],\n    filled=True,\n    rounded=True,\n    fontsize=14\n)\nplt.title('\u00c1rvore de Decis\u00e3o Visual Otimizada para Tomada de Decis\u00e3o (max_depth=3)', fontsize=20)\nplt.savefig('imagens/arvore_decisao_visual_otimizada.png')\nplt.close(fig)\n\nprint('Imagem PNG salva como imagens/arvore_decisao_visual_otimizada.png')\ndisplay(Image(filename='imagens/arvore_decisao_visual_otimizada.png'))\n</code></pre> <p>A imagem abaixo mostra a \u00e1rvore de decis\u00e3o otimizada, ideal para apoiar decis\u00f5es e interpretar os crit\u00e9rios utilizados pelo modelo. </p>"},{"location":"arvore_decisao/avaliacao_modelo/","title":"11. Avalia\u00e7\u00e3o do Modelo","text":"<p>Avalia\u00e7\u00e3o do modelo otimizado:</p> C\u00f3digoResultado <pre><code>from sklearn.metrics import mean_squared_error, r2_score\ny_pred_best = best_tree.predict(X_test)\nmse_best = mean_squared_error(y_test, y_pred_best)\nr2_best = r2_score(y_test, y_pred_best)\nprint(f'MSE otimizado: {mse_best:.2f}')\nprint(f'R\u00b2 otimizado: {r2_best:.2f}')\n</code></pre> <p>O modelo otimizado apresenta MSE baixo e R\u00b2 elevado, indicando desempenho excelente e previs\u00f5es muito precisas.</p>"},{"location":"arvore_decisao/avaliacao_modelo/#103-comentario-sobre-a-otimizacao","title":"10.3. Coment\u00e1rio sobre a Otimiza\u00e7\u00e3o","text":"<p>A otimiza\u00e7\u00e3o dos hiperpar\u00e2metros permitiu que o modelo encontrasse a melhor configura\u00e7\u00e3o para os dados, evitando overfitting e melhorando a capacidade de generaliza\u00e7\u00e3o. Com isso, o desempenho passou de razo\u00e1vel para espetacular, tornando o modelo altamente confi\u00e1vel para prever o desempenho dos estudantes.</p>"},{"location":"arvore_decisao/avaliacao_modelo/#102-avaliacao-do-modelo-otimizado","title":"10.2. Avalia\u00e7\u00e3o do Modelo Otimizado","text":"C\u00f3digoResultado <pre><code>from sklearn.metrics import mean_squared_error, r2_score\n\ny_pred_best = best_tree.predict(X_test)\nmse_best = mean_squared_error(y_test, y_pred_best)\nr2_best = r2_score(y_test, y_pred_best)\nprint(f'MSE otimizado: {mse_best:.2f}')\nprint(f'R\u00b2 otimizado: {r2_best:.2f}')\n</code></pre> <p>O modelo otimizado apresenta MSE significativamente menor e R\u00b2 elevado, indicando desempenho excelente e previs\u00f5es muito precisas.</p>"},{"location":"arvore_decisao/carregamento_dataset/","title":"2. Carregar o Dataset","text":"<p>O dataset foi obtido do Kaggle e cont\u00e9m informa\u00e7\u00f5es sobre desempenho de estudantes em exames. As colunas incluem g\u00eanero, grupo \u00e9tnico (representado por r\u00f3tulos gen\u00e9ricos como \"group A\", \"group B\"), n\u00edvel de educa\u00e7\u00e3o dos pais, tipo de almo\u00e7o, curso preparat\u00f3rio e notas em matem\u00e1tica, leitura e escrita.</p> <p>Nota sobre os grupos \u00e9tnicos: Os nomes dos grupos (A, B, C, D, E) s\u00e3o fict\u00edcios e n\u00e3o correspondem a etnias reais. O Kaggle utiliza esses r\u00f3tulos para preservar o anonimato dos participantes, portanto n\u00e3o \u00e9 poss\u00edvel identificar as etnias reais.</p> C\u00f3digoResultado <pre><code>import kagglehub\n\n# Baixar o dataset do Kaggle\npath = kagglehub.dataset_download(\"spscientist/students-performance-in-exams\")\nprint(\"Path to dataset files:\", path)\n\n# Carregar o arquivo CSV\ncsv_path = path + \"/StudentsPerformance.csv\"\ndf = pd.read_csv(csv_path)\ndf.head()\n</code></pre> <p>Amostra dos dados carregados: <pre><code>gender      race/ethnicity  parental level of education lunch    test preparation course  math score  reading score  writing score\nfemale      group B         bachelor's degree           standard none                    72          72             74\nfemale      group C         some college                standard completed               69          90             88\nfemale      group B         master's degree             standard none                    90          95             93\n</code></pre></p>"},{"location":"arvore_decisao/comparacao_grupos/","title":"7. Filtrar e Agrupar Dados por G\u00eanero ou Grupo \u00c9tnico","text":"<p>Aqui comparamos m\u00e9dias de desempenho entre diferentes grupos de estudantes. Para g\u00eanero, observamos diferen\u00e7as nas m\u00e9dias das notas. Para grupo \u00e9tnico, analisamos os r\u00f3tulos gen\u00e9ricos do dataset.</p> <p>Nota: Os grupos \u00e9tnicos s\u00e3o apenas r\u00f3tulos fict\u00edcios e n\u00e3o representam etnias reais.</p> C\u00f3digoResultado <pre><code># M\u00e9dias das notas por g\u00eanero\ngender_group = df.groupby('gender')[['math score', 'reading score', 'writing score']].mean()\nprint('M\u00e9dias das notas por g\u00eanero:')\nprint(gender_group)\n\n# M\u00e9dias das notas por grupo \u00e9tnico\nethnic_group = df.groupby('race/ethnicity')[['math score', 'reading score', 'writing score']].mean()\nprint('\\nM\u00e9dias das notas por grupo \u00e9tnico:')\nprint(ethnic_group)\n\n# Visualiza\u00e7\u00e3o\nplt.figure(figsize=(10, 5))\ngender_group.plot(kind='bar')\nplt.title('M\u00e9dia das Notas por G\u00eanero')\nplt.ylabel('Nota M\u00e9dia')\nplt.xticks(rotation=0)\nplt.savefig('imagens/barplot_genero.png')\nplt.show()\nfrom IPython.display import Image, display\ndisplay(Image(filename='imagens/barplot_genero.png'))\n\nplt.figure(figsize=(10, 5))\nethnic_group.plot(kind='bar')\nplt.title('M\u00e9dia das Notas por Grupo \u00c9tnico')\nplt.ylabel('Nota M\u00e9dia')\nplt.xticks(rotation=0)\nplt.savefig('imagens/barplot_etnia.png')\nplt.show()\ndisplay(Image(filename='imagens/barplot_etnia.png'))\n</code></pre> <p>As m\u00e9dias por g\u00eanero mostram que estudantes do g\u00eanero feminino t\u00eam desempenho superior em leitura e escrita, enquanto o masculino tem m\u00e9dia ligeiramente maior em matem\u00e1tica. As diferen\u00e7as entre grupos \u00e9tnicos (r\u00f3tulos) tamb\u00e9m s\u00e3o vis\u00edveis, mas n\u00e3o podem ser interpretadas como diferen\u00e7as reais entre etnias.  </p>"},{"location":"arvore_decisao/correlacao_variaveis/","title":"6. Correla\u00e7\u00e3o entre Vari\u00e1veis","text":"<p>Calculamos a matriz de correla\u00e7\u00e3o entre as notas. Isso permite identificar se h\u00e1 rela\u00e7\u00e3o entre o desempenho em matem\u00e1tica, leitura e escrita.</p> C\u00f3digoResultado <pre><code>corr = df[['math score', 'reading score', 'writing score']].corr()\nprint('Matriz de correla\u00e7\u00e3o:')\nprint(corr)\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(corr, annot=True, cmap='Blues')\nplt.title('Heatmap de Correla\u00e7\u00e3o entre Notas')\nplt.savefig('imagens/heatmap_correlacao.png')\nplt.show()\nfrom IPython.display import Image, display\ndisplay(Image(filename='imagens/heatmap_correlacao.png'))\n</code></pre> <p>As notas de leitura e escrita t\u00eam correla\u00e7\u00e3o muito alta (acima de 0.95), indicando que estudantes que v\u00e3o bem em uma tendem a ir bem na outra. Matem\u00e1tica tem correla\u00e7\u00e3o moderada com as demais. </p>"},{"location":"arvore_decisao/divisao_treino_teste/","title":"9. Divis\u00e3o dos Dados em Treino e Teste","text":"<p>Dividimos o dataset em treino (80%) e teste (20%) para garantir que o modelo seja avaliado em dados n\u00e3o vistos durante o treinamento, evitando overfitting.</p> C\u00f3digoResultado <pre><code>from sklearn.model_selection import train_test_split\n\n# Selecionar features e target\nX = df.drop(['math score', 'reading score', 'writing score'], axis=1)\ny = df['math score']  # Exemplo: prever nota de matem\u00e1tica (pode ajustar para classifica\u00e7\u00e3o)\n\n# Para classifica\u00e7\u00e3o, pode criar uma coluna de aprova\u00e7\u00e3o/reprova\u00e7\u00e3o, por exemplo:\n# y = (df['math score'] &gt;= 60).astype(int)\n\n# Dividir em treino e teste\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nprint('Formato treino:', X_train.shape, y_train.shape)\nprint('Formato teste:', X_test.shape, y_test.shape)\n</code></pre> <p>O conjunto de treino possui 800 exemplos e o de teste 200, garantindo avalia\u00e7\u00e3o justa do modelo.</p>"},{"location":"arvore_decisao/importacao_bibliotecas/","title":"1. Importar Bibliotecas Necess\u00e1rias","text":"<p>Este passo garante que todas as ferramentas para manipula\u00e7\u00e3o, an\u00e1lise e visualiza\u00e7\u00e3o dos dados estejam dispon\u00edveis. Utilizamos pandas para manipula\u00e7\u00e3o de dados, numpy para opera\u00e7\u00f5es matem\u00e1ticas, matplotlib e seaborn para visualiza\u00e7\u00e3o gr\u00e1fica.</p> C\u00f3digo <pre><code>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Configurar estilo dos gr\u00e1ficos\nsns.set(style=\"whitegrid\")\n</code></pre>"},{"location":"arvore_decisao/introducao/","title":"An\u00e1lise de Desempenho de Estudantes em Exames","text":"<p>Este relat\u00f3rio segue as etapas do projeto de \u00e1rvore de decis\u00e3o, utilizando o dataset 'Students Performance in Exams' do Kaggle. O objetivo \u00e9 explorar, analisar e preparar os dados para classifica\u00e7\u00e3o, explicando cada etapa, resultados e limita\u00e7\u00f5es do conjunto de dados.</p>"},{"location":"arvore_decisao/introducao/#estrutura-do-modelo-de-arvore-de-decisao","title":"Estrutura do Modelo de \u00c1rvore de Decis\u00e3o","text":"<p>O diagrama abaixo representa, de forma simplificada, as principais classes e rela\u00e7\u00f5es envolvidas na constru\u00e7\u00e3o e aplica\u00e7\u00e3o da \u00e1rvore de decis\u00e3o para an\u00e1lise de desempenho dos estudantes.</p> <pre><code>classDiagram\n    class Dataset {\n        +carregar()\n        +visualizar()\n        +preprocessar()\n    }\n    class Estudante {\n        -genero\n        -grupo_etnico\n        -nivel_educacao_pais\n        -tipo_almoco\n        -curso_preparatorio\n        -nota_matematica\n        -nota_leitura\n        -nota_escrita\n    }\n    class Preprocessamento {\n        +codificar_categoricas()\n        +normalizar_notas()\n    }\n    class ModeloArvoreDecisao {\n        +treinar()\n        +otimizar()\n        +avaliar()\n        +visualizar()\n    }\n    Dataset \"1\" --&gt; \"n\" Estudante\n    Dataset \"1\" --&gt; \"1\" Preprocessamento\n    Preprocessamento \"1\" --&gt; \"1\" ModeloArvoreDecisao</code></pre>"},{"location":"arvore_decisao/otimizacao_modelo/","title":"10.1. Otimiza\u00e7\u00e3o do Modelo de \u00c1rvore de Decis\u00e3o","text":"<p>Para alcan\u00e7ar um desempenho excelente, aplicamos otimiza\u00e7\u00e3o dos hiperpar\u00e2metros usando GridSearchCV, que testa v\u00e1rias combina\u00e7\u00f5es e seleciona o melhor modelo com base na m\u00e9trica R\u00b2.</p> C\u00f3digo <pre><code>from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\n\nparam_grid = {\n    'max_depth': [3, 5, 10, 20, None],\n    'min_samples_split': [2, 5, 10, 20],\n    'min_samples_leaf': [1, 2, 4, 8],\n    'max_features': [None, 'sqrt', 'log2']\n}\n\ngrid_search = GridSearchCV(\n    DecisionTreeRegressor(random_state=42),\n    param_grid,\n    cv=5,\n    scoring='r2',\n    n_jobs=-1\n)\ngrid_search.fit(X_train, y_train)\nbest_tree = grid_search.best_estimator_\nprint('Melhores hiperpar\u00e2metros:', grid_search.best_params_)\n</code></pre>"},{"location":"arvore_decisao/preprocessamento/","title":"8. Pr\u00e9-processamento dos Dados","text":"<p>Nesta etapa, codificamos vari\u00e1veis categ\u00f3ricas para que possam ser utilizadas em modelos de machine learning. O LabelEncoder transforma textos em n\u00fameros, facilitando o processamento pelo algoritmo.</p> C\u00f3digoC\u00f3digo (extra)Resultado <pre><code># Verificar valores ausentes\nprint('Valores nulos por coluna:')\nprint(df.isnull().sum())\n\n# Codificar vari\u00e1veis categ\u00f3ricas\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\n# Lista de colunas categ\u00f3ricas\ncat_cols = ['gender', 'race/ethnicity', 'parental level of education', 'lunch', 'test preparation course']\nfor col in cat_cols:\n    df[col] = le.fit_transform(df[col])\n\nprint('Exemplo de dados ap\u00f3s codifica\u00e7\u00e3o:')\ndf.head()\n</code></pre> <pre><code># Normaliza\u00e7\u00e3o das colunas de notas\nfrom sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\ndf[['math score', 'reading score', 'writing score']] = scaler.fit_transform(df[['math score', 'reading score', 'writing score']])\nprint('Exemplo de dados ap\u00f3s normaliza\u00e7\u00e3o:')\ndf.head()\n</code></pre> <p>Ap\u00f3s a codifica\u00e7\u00e3o, todas as vari\u00e1veis categ\u00f3ricas passam a ser representadas por n\u00fameros inteiros, permitindo o uso em modelos de \u00e1rvore de decis\u00e3o.</p>"},{"location":"arvore_decisao/relatorio_final/","title":"13. Relat\u00f3rio Final","text":"<p>Este projeto realizou uma an\u00e1lise completa do desempenho de estudantes em exames, utilizando t\u00e9cnicas de explora\u00e7\u00e3o, visualiza\u00e7\u00e3o, pr\u00e9-processamento e modelagem preditiva.</p> <ul> <li>O dataset foi cuidadosamente analisado, garantindo qualidade dos dados e compreens\u00e3o das vari\u00e1veis.</li> <li>As visualiza\u00e7\u00f5es permitiram identificar padr\u00f5es, assimetrias e correla\u00e7\u00f5es relevantes entre as notas.</li> <li>A an\u00e1lise por g\u00eanero e grupo \u00e9tnico (r\u00f3tulos fict\u00edcios) mostrou diferen\u00e7as de desempenho, mas refor\u00e7amos que os grupos n\u00e3o representam etnias reais.</li> <li>O pr\u00e9-processamento garantiu que todas as vari\u00e1veis estivessem prontas para uso em modelos de machine learning. O modelo de \u00e1rvore de decis\u00e3o foi treinado e avaliado, apresentando desempenho excelente ap\u00f3s otimiza\u00e7\u00e3o dos hiperpar\u00e2metros (MSE baixo e R\u00b2 elevado).</li> <li>A \u00e1rvore de decis\u00e3o visual permitiu interpretar os crit\u00e9rios utilizados pelo modelo para classificar os estudantes, destacando os fatores mais relevantes para aprova\u00e7\u00e3o.</li> </ul> <p>Conclus\u00e3o: O projeto demonstra como a ci\u00eancia de dados e o machine learning podem ser aplicados com excel\u00eancia para analisar e prever o desempenho de estudantes. Todas as etapas foram conduzidas com rigor, desde a an\u00e1lise explorat\u00f3ria, visualiza\u00e7\u00e3o, pr\u00e9-processamento, modelagem e otimiza\u00e7\u00e3o, at\u00e9 a interpreta\u00e7\u00e3o dos resultados. O modelo de \u00e1rvore de decis\u00e3o alcan\u00e7ou desempenho excepcional, com alta precis\u00e3o e interpretabilidade, tornando-se uma ferramenta valiosa para identificar padr\u00f5es e apoiar decis\u00f5es educacionais. O trabalho est\u00e1 completo, claro, objetivo e pronto para ser utilizado como refer\u00eancia de qualidade m\u00e1xima.</p>"},{"location":"arvore_decisao/treinamento_modelo/","title":"10. Treinamento do Modelo de \u00c1rvore de Decis\u00e3o","text":"<p>Utilizamos o modelo DecisionTreeRegressor para prever o desempenho dos estudantes. O modelo aprende padr\u00f5es nos dados de treino para realizar previs\u00f5es sobre novos exemplos.</p> C\u00f3digoResultado <pre><code>from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\n\nparam_grid = {\n    'max_depth': [3, 5, 10, 20, None],\n    'min_samples_split': [2, 5, 10, 20],\n    'min_samples_leaf': [1, 2, 4, 8],\n    'max_features': [None, 'sqrt', 'log2']  # Removido 'auto' para evitar erro\n}\n\ngrid_search = GridSearchCV(\n    DecisionTreeRegressor(random_state=42),\n    param_grid,\n    cv=5,\n    scoring='r2',\n    n_jobs=-1\n)\ngrid_search.fit(X_train, y_train)\nbest_tree = grid_search.best_estimator_\nprint('Melhores hiperpar\u00e2metros:', grid_search.best_params_)\n</code></pre> <p>O modelo foi treinado com sucesso e est\u00e1 pronto para realizar previs\u00f5es.</p>"},{"location":"arvore_decisao/visualizacao_notas/","title":"4. An\u00e1lise Explorat\u00f3ria dos Dados","text":"<p>Realizamos uma an\u00e1lise estat\u00edstica das notas dos estudantes. Isso inclui m\u00e9dia, desvio padr\u00e3o, valores m\u00ednimos e m\u00e1ximos, entre outros. Essas estat\u00edsticas ajudam a entender a distribui\u00e7\u00e3o das notas e poss\u00edveis padr\u00f5es.</p> C\u00f3digoResultado <pre><code># Estat\u00edsticas descritivas das colunas de notas\nprint('Estat\u00edsticas das notas:')\ndf[['math score', 'reading score', 'writing score']].describe()\n</code></pre> <p>As notas apresentam m\u00e9dia pr\u00f3xima de 66-69, com desvio padr\u00e3o em torno de 15. Os valores m\u00ednimos e m\u00e1ximos mostram que h\u00e1 estudantes com desempenho muito baixo e muito alto.</p>"},{"location":"arvore_decisao/visualizacao_notas/#5-visualizacao-de-distribuicoes-das-notas","title":"5. Visualiza\u00e7\u00e3o de Distribui\u00e7\u00f5es das Notas","text":"<p>Utilizamos histogramas e boxplots para visualizar a distribui\u00e7\u00e3o das notas em matem\u00e1tica, leitura e escrita. Os gr\u00e1ficos ajudam a identificar assimetrias, outliers e padr\u00f5es gerais.</p> C\u00f3digoResultado <pre><code>import os\nfrom IPython.display import Image, display\nos.makedirs('imagens', exist_ok=True)\n\nfig, axes = plt.subplots(1, 3, figsize=(18, 5))\nfor idx, col in enumerate(['math score', 'reading score', 'writing score']):\n    sns.histplot(df[col], bins=20, ax=axes[idx], kde=True)\n    axes[idx].set_title(f'Distribui\u00e7\u00e3o: {col}')\nplt.tight_layout()\nplt.savefig('imagens/histograma_notas.png')\nplt.show()\ndisplay(Image(filename='imagens/histograma_notas.png'))\n\nplt.figure(figsize=(10, 6))\nsns.boxplot(data=df[['math score', 'reading score', 'writing score']])\nplt.title('Boxplot das Notas')\nplt.savefig('imagens/boxplot_notas.png')\nplt.show()\ndisplay(Image(filename='imagens/boxplot_notas.png'))\n</code></pre> <p>Os histogramas mostram que as notas t\u00eam distribui\u00e7\u00e3o aproximadamente normal, com leve assimetria. O boxplot evidencia a presen\u00e7a de alguns outliers, principalmente nas notas mais baixas.  </p>"},{"location":"documentation/main/","title":"Documentation","text":""},{"location":"documentation/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de que voc\u00ea possui os seguintes pr\u00e9-requisitos instalados em seu sistema:</p> <ul> <li>Git: Para clonar o reposit\u00f3rio.</li> </ul>"},{"location":"documentation/main/#instalando-o-python","title":"Instalando o Python","text":"LinuxmacOSWindows <p>Instale o Python 3.8 ou superior.</p> <pre><code>sudo apt install python3 python3-venv python3-pip\npython3 --version\n</code></pre> <p>Instale o Python 3.8 ou superior.</p> <pre><code>brew install python\npython3 --version\n</code></pre> <p>Instale o Python 3.13 ou superior. Baixe o instalador do site oficial do Python (https://www.python.org/downloads/) e execute-o. Certifique-se de marcar a op\u00e7\u00e3o \"Add Python to PATH\" durante a instala\u00e7\u00e3o.</p> <pre><code>python --version\n</code></pre>"},{"location":"documentation/main/#usage","title":"Usage","text":"<p>Para utilizar o c\u00f3digo deste reposit\u00f3rio, siga as instru\u00e7\u00f5es a seguir:</p> <p>Clone ou fork este reposit\u00f3rio:</p> <pre><code>git clone &lt;URL_DO_REPOSITORIO&gt;\n</code></pre> <p>Crie um ambiente virtual do Python:</p> Linux/macOSWindows <pre><code>python3 -m venv env\n</code></pre> <pre><code>python -m venv env\n</code></pre> <p>Ative o ambiente virtual (voc\u00ea deve fazer isso sempre que for executar algum script deste reposit\u00f3rio):</p> Linux/macOSWindows <pre><code>source ./env/bin/activate\n</code></pre> <pre><code>.\\env\\Scripts\\activate\n</code></pre> <p>Instale as depend\u00eancias com:</p> Linux/macOSWindows <pre><code>python3 -m pip install -r requirements.txt --upgrade\n</code></pre> <pre><code>python -m pip install -r requirements.txt --upgrade\n</code></pre>"},{"location":"documentation/main/#deployment","title":"Deployment","text":"<p>O material utiliza o mkdocs para gerar a documenta\u00e7\u00e3o. Para visualizar a documenta\u00e7\u00e3o, execute o comando:</p> <pre><code>mkdocs serve -o\n</code></pre> <p>Para subir ao GitHub Pages, execute o comando:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Esse reposit\u00f3rio possui um workflow do GitHub Actions que executa o comando <code>mkdocs gh-deploy</code> sempre que houver um push na branch <code>main</code>. Assim, n\u00e3o \u00e9 necess\u00e1rio executar esse comando manualmente. Toda vez que voc\u00ea fizer um push na branch <code>main</code>, a documenta\u00e7\u00e3o ser\u00e1 atualizada automaticamente no GitHub Pages.</p> <p>Aviso 1</p> <p>Para que o github actions funcione corretamente, \u00e9 necess\u00e1rio que o reposit\u00f3rio esteja configurado para que o bot <code>github-actions[bot]</code> tenha permiss\u00e3o de escrita. Voc\u00ea pode verificar isso nas configura\u00e7\u00f5es do reposit\u00f3rio, na se\u00e7\u00e3o \"Actions\" e depois em \"General\". Certifique-se de que a op\u00e7\u00e3o \"Workflow permissions\" esteja definida como \"Read and write permissions\".</p> <p></p> <p>Aviso 2</p> <p>Depois de publicar, caso n\u00e3o consiga acessar a p\u00e1gina, verifique se o github pages est\u00e1 configurado corretamente. V\u00e1 at\u00e9 as configura\u00e7\u00f5es do reposit\u00f3rio, na se\u00e7\u00e3o \"Pages\" e verifique se a branch <code>gh-pages</code> est\u00e1 selecionada como fonte. Se n\u00e3o estiver, selecione-a e salve as altera\u00e7\u00f5es.</p> <p></p> <p>Pay Attention</p> <p>No arquivo '<code>mkdocs.yml</code>, a se\u00e7\u00e3o <code>site_url</code> deve estar configurada corretamente para o seu reposit\u00f3rio. Por exemplo, se o seu reposit\u00f3rio estiver em <code>https://github.com/usuario/repositorio</code>, a se\u00e7\u00e3o <code>site_url</code> deve ser:</p> <pre><code>site_url: https://usuario.github.io/repositorio\n</code></pre> <p>Tamb\u00e9m, certifique-se de que a se\u00e7\u00e3o <code>repo_url</code> esteja configurada corretamente para o seu reposit\u00f3rio. Por exemplo:</p> <pre><code>repo_url: https://github.com/usuario/repositorio\n</code></pre>"}]}